name: CI Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
  
      - name: Build sdist
        run: pipx run build --sdist
  
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_native:
    strategy:
      matrix:
        include:
            # Linux: native x86_64 build (runs on the standard Linux runs-on)
          - os: linux-intel
            runs-on: ubuntu-latest
            # Linux: native aarch64 build (using the native aarch64 runs-on)
          - os: linux-arm
            runs-on: ubuntu-22.04-arm
            # macOS: native x86_64 build
          - os: macos-intel
            runs-on: macos-13
            # macOS: native arm64 build
          - os: macos-arm
            runs-on: macos-latest
            # Windows: native x86_64 MSVC build
          - os: windows-intel
            runs-on: windows-latest       
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
    name: Build Wheels Natively for ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install pipx
        run: python -m pip install pipx

      - name: Build wheel with pipx
        run: pipx run build

      - name: Upload native Wheels
        uses: actions/upload-artifact@v4
        with:
          name: native-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist/*.whl

      - name: Install built wheel
        run: pip install dist/*.whl
        shell: bash

      - name: Run tests
        run: pytest -v

  cibuildwheel:
    strategy:
      matrix:
        include:
            # Linux: native x86_64 build (runs on the standard Linux runs-on)
          - os: linux-intel
            runs-on: ubuntu-latest
            # Linux: native aarch64 build (using the native aarch64 runs-on)
          - os: linux-arm
            runs-on: ubuntu-22.04-arm
            # macOS: native x86_64 build
          - os: macos-intel
            runs-on: macos-13
            # macOS: native arm64 build
          - os: macos-arm
            runs-on: macos-latest
            # Windows: native x86_64 MSVC build
          - os: windows-intel
            runs-on: windows-latest 
            # Pyodide uses ubuntu-latest
          - os: pyodide
            runs-on: ubuntu-latest
            platform: pyodide
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
    name: Build Wheels with CIBW for ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        continue-on-error: true
        env:
          CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
          SKBUILD_BUILD_VERBOSE: "true"

      - name: Upload CIBW Wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
